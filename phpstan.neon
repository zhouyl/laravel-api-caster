parameters:
    level: 6
    paths:
        - src
    treatPhpDocTypesAsCertain: false
    ignoreErrors:
        # ArrayAccess interface compatibility
        - '#Parameter \#1 \$offset \(string\) of method .* should be contravariant with parameter \$offset \(mixed\) of method ArrayAccess.*#'
        # Variable method calls are acceptable in this context
        - '#Variable method call on \$this.*#'
        # is_a checks with class-string are always true by design
        - '#Call to function is_a\(\) with arguments .* will always evaluate to true#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::toArray\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::toJson\(\)#'
        - '#Access to an undefined property [a-zA-Z0-9\\_]+::\$[a-zA-Z0-9_]+#'
        - '#Unsafe usage of new static\(\)#'
        - '#Parameter .+ with no type specified#'
        - '#has no return type specified#'
        - '#Parameter .+ is implicitly nullable via default value null#'
        # EntityCollection method signature compatibility with Laravel Collection
        - '#Return type \(static\(.*EntityCollection.*\)\) of method .*EntityCollection::.* should be covariant with return type.*#'
        - '#Parameter \#1 \$.*\(.*\) of method .*EntityCollection::.* should be contravariant with parameter.*#'
        - '#Method .*EntityCollection::.* should return .* but returns .*#'
        - '#Method .*Collection.*::shuffle\(\) invoked with 1 parameter, 0 required#'
        # Response boolean checks
        - '#Only booleans are allowed in a negated boolean, mixed given#'
        - '#Construct empty\(\) is not allowed\. Use more strict comparison#'
        # Entity collection return type
        - '#Method .*Entity::collection\(\) should return .* but returns .*#'
        -
            identifier: missingType.iterableValue
        -
            identifier: missingType.generics
    reportUnmatchedIgnoredErrors: false
